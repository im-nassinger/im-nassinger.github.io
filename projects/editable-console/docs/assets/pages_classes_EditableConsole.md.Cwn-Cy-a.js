import{_ as a,c as o,o as r,ae as t}from"./chunks/framework.CS-u8QTr.js";const g=JSON.parse('{"title":"Class: EditableConsole","description":"","frontmatter":{},"headers":[],"relativePath":"pages/classes/EditableConsole.md","filePath":"pages/classes/EditableConsole.md"}'),s={name:"pages/classes/EditableConsole.md"};function l(n,e,d,i,h,c){return r(),o("div",null,e[0]||(e[0]=[t('<p><a href="./../README.html"><strong>editable-console</strong></a></p><hr><p><a href="./../globals.html">editable-console</a> / EditableConsole</p><h1 id="class-editableconsole" tabindex="-1">Class: EditableConsole <a class="header-anchor" href="#class-editableconsole" aria-label="Permalink to &quot;Class: EditableConsole&quot;">​</a></h1><p>Defined in: EditableConsole.ts:8</p><p>Represents a console that supports editable logs.</p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">Constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;Constructor&quot;">​</a></h3><blockquote><p><strong>new EditableConsole</strong>(): <code>EditableConsole</code></p></blockquote><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>EditableConsole</code></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="lastlogstring" tabindex="-1">lastLogString <a class="header-anchor" href="#lastlogstring" aria-label="Permalink to &quot;lastLogString&quot;">​</a></h3><blockquote><p><strong>lastLogString</strong>: <code>string</code> = <code>&#39;&#39;</code></p></blockquote><p>Defined in: EditableConsole.ts:12</p><p>Cached string of the last rendered log output.</p><hr><h3 id="logs" tabindex="-1">logs <a class="header-anchor" href="#logs" aria-label="Permalink to &quot;logs&quot;">​</a></h3><blockquote><p><strong>logs</strong>: <a href="./EditableLog.html"><code>EditableLog</code></a>[] = <code>[]</code></p></blockquote><p>Defined in: EditableConsole.ts:10</p><p>Array of editable logs.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="error" tabindex="-1">error() <a class="header-anchor" href="#error" aria-label="Permalink to &quot;error()&quot;">​</a></h3><blockquote><p><strong>error</strong>(...<code>messages</code>): <a href="./EditableLog.html"><code>EditableLog</code></a></p></blockquote><p>Defined in: EditableConsole.ts:73</p><p>Logs an error message.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="messages" tabindex="-1">messages <a class="header-anchor" href="#messages" aria-label="Permalink to &quot;messages&quot;">​</a></h5><p>...<a href="./../type-aliases/AnyMessage.html"><code>AnyMessage</code></a>[]</p><p>The messages to log.</p><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./EditableLog.html"><code>EditableLog</code></a></p><p>The created editable log.</p><hr><h3 id="log" tabindex="-1">log() <a class="header-anchor" href="#log" aria-label="Permalink to &quot;log()&quot;">​</a></h3><blockquote><p><strong>log</strong>(...<code>messages</code>): <a href="./EditableLog.html"><code>EditableLog</code></a></p></blockquote><p>Defined in: EditableConsole.ts:53</p><p>Logs an informational message.</p><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="messages-1" tabindex="-1">messages <a class="header-anchor" href="#messages-1" aria-label="Permalink to &quot;messages&quot;">​</a></h5><p>...<a href="./../type-aliases/AnyMessage.html"><code>AnyMessage</code></a>[]</p><p>The messages to log.</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./EditableLog.html"><code>EditableLog</code></a></p><p>The created editable log.</p><hr><h3 id="removelog" tabindex="-1">removeLog() <a class="header-anchor" href="#removelog" aria-label="Permalink to &quot;removeLog()&quot;">​</a></h3><blockquote><p><strong>removeLog</strong>(<code>log</code>): <code>void</code></p></blockquote><p>Defined in: EditableConsole.ts:36</p><p>Removes a log entry from the console.</p><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="log-1" tabindex="-1">log <a class="header-anchor" href="#log-1" aria-label="Permalink to &quot;log&quot;">​</a></h5><p>The log to remove or its index.</p><p><code>number</code> | <a href="./EditableLog.html"><code>EditableLog</code></a></p><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="render" tabindex="-1">render() <a class="header-anchor" href="#render" aria-label="Permalink to &quot;render()&quot;">​</a></h3><blockquote><p><strong>render</strong>(): <code>void</code></p></blockquote><p>Defined in: EditableConsole.ts:81</p><p>Renders the current logs to the console. Uses caching to avoid unnecessary re-renders.</p><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>void</code></p><hr><h3 id="tostring" tabindex="-1">toString() <a class="header-anchor" href="#tostring" aria-label="Permalink to &quot;toString()&quot;">​</a></h3><blockquote><p><strong>toString</strong>(): <code>string</code></p></blockquote><p>Defined in: EditableConsole.ts:96</p><p>Converts all logs to a single string representation.</p><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>string</code></p><p>The string representation of all logs.</p><hr><h3 id="warn" tabindex="-1">warn() <a class="header-anchor" href="#warn" aria-label="Permalink to &quot;warn()&quot;">​</a></h3><blockquote><p><strong>warn</strong>(...<code>messages</code>): <a href="./EditableLog.html"><code>EditableLog</code></a></p></blockquote><p>Defined in: EditableConsole.ts:63</p><p>Logs a warning message.</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><h5 id="messages-2" tabindex="-1">messages <a class="header-anchor" href="#messages-2" aria-label="Permalink to &quot;messages&quot;">​</a></h5><p>...<a href="./../type-aliases/AnyMessage.html"><code>AnyMessage</code></a>[]</p><p>The messages to log.</p><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./EditableLog.html"><code>EditableLog</code></a></p><p>The created editable log.</p>',83)]))}const b=a(s,[["render",l]]);export{g as __pageData,b as default};
