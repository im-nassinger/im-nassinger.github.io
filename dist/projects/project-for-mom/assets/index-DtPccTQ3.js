(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))u(n);new MutationObserver(n=>{for(const t of n)if(t.type==="childList")for(const s of t.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&u(s)}).observe(document,{childList:!0,subtree:!0});function d(n){const t={};return n.integrity&&(t.integrity=n.integrity),n.referrerPolicy&&(t.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?t.credentials="include":n.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function u(n){if(n.ep)return;n.ep=!0;const t=d(n);fetch(n.href,t)}})();function S(){const e=localStorage.getItem("students");if(e)try{const o=JSON.parse(e);if(Array.isArray(o))return o}catch{return[]}return[]}function m(e){localStorage.setItem("students",JSON.stringify(e))}function y(e){const o=document.createElement("div");o.classList.add("line"),o.dataset.id=e.id,e.payments===0&&o.classList.add("danger"),o.innerHTML=`
        <div class="cell" data-key="name">
            <span class="text" contenteditable>${x(e.name)}</span>
        </div>
        <div class="cell" data-key="payments">
            <span class="text" contenteditable data-allow-regex="[0-9]">${x(e.payments)}</span>
        </div> 

        <button class="delete-button" title="Excluir aluno">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-trash2-icon lucide-trash-2">
                <path d="M10 11v6"/>
                <path d="M14 11v6"/>
                <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6"/>
                <path d="M3 6h18"/>
                <path d="M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"/>
            </svg>
        </button>
    `,document.querySelector(".scroller").appendChild(o)}function C(e){const o=document.querySelector(`.line[data-id="${e.id}"]`);if(!o)return;const d=o.querySelector('.cell[data-key="name"] .text'),u=o.querySelector('.cell[data-key="payments"] .text');d.textContent=e.name,u.textContent=String(e.payments),e.payments===0&&o.classList.add("danger")}function g(e){const o=document.querySelector(".students-counter"),d=o.querySelector(".count"),u=o.querySelector(".text");e===0?(d.textContent="",u.textContent="Nenhum aluno cadastrado"):(d.textContent=String(e),u.textContent=e===1?"aluno cadastrado":"alunos cadastrados")}function x(e){const o=document.createElement("div");return o.textContent=String(e),o.innerHTML}function E(){const e=S();g(e.length);for(const n of e)y(n);document.querySelector(".add-student-button").addEventListener("click",()=>{const n=prompt("Digite o nome do aluno:");if(n===null)return;if(!n){alert("O nome do aluno é obrigatório!");return}const t=crypto.randomUUID(),s=0,a=Date.now(),r={id:t,name:n,payments:s,createdAt:a};e.push(r),m(e),y(r),g(e.length)}),document.querySelector(".scroller").addEventListener("click",n=>{const t=n.target;if(t.closest(".delete-button")){const s=t.closest(".line"),a=s.dataset.id,r=e.findIndex(i=>i.id===a);if(r>-1){const i=e[r];confirm(`Tem certeza que deseja excluir o aluno "${i.name}"?`)&&(e.splice(r,1),m(e),s.remove(),g(e.length))}else alert("erro: aluno não encontrado!"),s.remove()}}),document.querySelector(".finish-class-button").addEventListener("click",()=>{if(confirm(`Tem certeza que deseja finalizar a aula?
Isso irá diminuir 1 aula de todos os alunos que possuem aulas pagas.`)){for(const t of e)t.payments>0&&(t.payments-=1);m(e);for(const t of e)C(t)}}),document.addEventListener("paste",n=>{const t=n.target;if(!t.isContentEditable)return;n.preventDefault();let s=n.clipboardData?.getData("text/plain");if(!s)return;const a=t.dataset.allowRegex;if(a){const f=new RegExp(a);s=s.split("").filter(h=>f.test(h)).join("")}document.execCommand("insertText",!1,s);const r=t.closest(".cell");if(!r)return;const i=r.dataset.key;if(!i)return;const c=r.closest(".line");if(!c)return;const l=c.dataset.id;if(!l)return;const p=e.find(f=>f.id===l);if(p){if(i==="name")p.name=t.textContent||"";else if(i==="payments"){const f=Number(t.textContent||"0");if(isNaN(f))return;p.payments=f,c.classList.toggle("danger",p.payments===0)}m(e)}}),document.addEventListener("keydown",n=>{const t=n.target;if(!t.isContentEditable)return;let s=t.textContent||"";const a=t.dataset.allowRegex;if(a){const r=new RegExp(a);if(!n.ctrlKey&&!n.shiftKey&&!n.altKey&&n.key.length===1&&!r.test(n.key)){n.preventDefault();return}s=s.split("").filter(i=>r.test(i)).join("")}if(s!==t.textContent){const r=window.getSelection();if(!r)return;const c=r.getRangeAt(0).startOffset;t.textContent=s;const l=document.createRange();l.setStart(t.childNodes[0]||t,Math.min(c,s.length)),l.collapse(!0),r.removeAllRanges(),r.addRange(l)}}),document.addEventListener("keyup",n=>{const t=n.target;if(!t.isContentEditable)return;const s=t.closest(".cell");if(!s)return;const a=s.dataset.key;if(!a)return;const r=s.closest(".line");if(!r)return;const i=r.dataset.id;if(!i)return;const c=e.find(l=>l.id===i);if(c){if(a==="name")c.name=t.textContent||"";else if(a==="payments"){const l=Number(t.textContent||"0");if(isNaN(l))return;c.payments=l,r.classList.toggle("danger",c.payments===0)}m(e)}})}E();
